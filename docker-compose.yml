###############################################################################
#                          Generated on phpdocker.io                          #
###############################################################################
version: '3.1'
services:
    database:
        container_name: test-orm-mysql
        image: 'mysql:8.0'
        working_dir: /application
        volumes:
            - '.:/application'
#            - './todo.sql:/docker-entrypoint-initdb.d/dump.sql'
        env_file:
            - ./.env
        ports:
            - '22002:3306'
        command:
            - "--default-authentication-plugin=caching_sha2_password"
            - "--lower_case_table_names=1"

    webserver:
        container_name: test-orm-nginx
        image: 'nginx:alpine'
        working_dir: /application
        restart: unless-stopped
        volumes:
            - '.:/application'
            - './phpdocker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf'
        ports:
            - '22000:80'

    php-fpm:
        container_name: test-orm-php
        build: phpdocker/php-fpm
        working_dir: /application
        env_file:
            - ./.env
        volumes:
            - '.:/application'
            - './phpdocker/php-fpm/php-ini-overrides.ini:/etc/php/8.2/fpm/conf.d/99-overrides.ini'
        depends_on:
            - database
#        command: sh -c "/wait && /bin/bash /application/phpdocker/php-fpm/entrypoint.sh"
#        command: "/bin/bash /wait && /bin/bash /application/phpdocker/php-fpm/entrypoint.sh"
        environment:
            - WAIT_HOSTS=database:3306
            - WAIT_HOSTS_TIMEOUT=300
            - WAIT_SLEEP_INTERVAL=5
            - WAIT_HOST_CONNECT_TIMEOUT=30

    preload:
        build: phpdocker/preload
        container_name: test-orm-preload
        volumes:
            - '.:/application'
            - './phpdocker/php-fpm/php-ini-overrides.ini:/etc/php/8.2/fpm/conf.d/99-overrides.ini'
        env_file:
            - ./.env
        command: sh -c "/wait && /bin/bash /application/phpdocker/php-fpm/entrypoint.sh"
#        command: "/bin/bash /wait && /bin/bash /application/phpdocker/php-fpm/entrypoint.sh"

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: test-orm-phpmyadmin
        environment:
            PMA_HOST: database
            PMA_PORT: 3306
        ports:
            - "22003:80"

####> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-15}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
####< doctrine/doctrine-bundle ###
#
#volumes:
####> doctrine/doctrine-bundle ###
#  database_data:
####< doctrine/doctrine-bundle ###
